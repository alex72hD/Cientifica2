// <auto-generated />
using System;
using Cientifica.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cientifica.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240405172049_prueba")]
    partial class prueba
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cientifica.Shared.Entities.ActividadesDeInvestigacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AsignacionId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaDeFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDeInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AsignacionId");

                    b.ToTable("ActividadesDeInvestigaciones");
                });

            modelBuilder.Entity("Cientifica.Shared.Entities.Asignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProyectoDeInvestigacionId")
                        .HasColumnType("int");

                    b.Property<int>("RecursosEId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoDeInvestigacionId");

                    b.HasIndex("RecursosEId");

                    b.ToTable("Asignaciones");
                });

            modelBuilder.Entity("Cientifica.Shared.Entities.Investigador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("afiliacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("especialidad")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.HasKey("Id");

                    b.ToTable("Investigadores");
                });

            modelBuilder.Entity("Cientifica.Shared.Entities.Participacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InvestigadorId")
                        .HasColumnType("int");

                    b.Property<int>("ProyectoDeInvestigacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvestigadorId");

                    b.HasIndex("ProyectoDeInvestigacionId");

                    b.ToTable("Participaciones");
                });

            modelBuilder.Entity("Cientifica.Shared.Entities.ProyectoDeInvestigacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaDeFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDeInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ProyectoDeInvestigaciones");
                });

            modelBuilder.Entity("Cientifica.Shared.Entities.Publicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProyectoDeInvestigacionesId")
                        .HasColumnType("int");

                    b.Property<int>("ProyectoDeinvestigacion")
                        .HasColumnType("int");

                    b.Property<string>("autores")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("fechapu")
                        .HasColumnType("datetime2");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoDeInvestigacionesId");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("Cientifica.Shared.Entities.RecursosE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("cantidad")
                        .HasMaxLength(35)
                        .HasColumnType("int");

                    b.Property<DateTime>("entrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("proveedor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RecursosEs");
                });

            modelBuilder.Entity("Cientifica.Shared.Entities.ActividadesDeInvestigacion", b =>
                {
                    b.HasOne("Cientifica.Shared.Entities.Asignacion", "Asignaciones")
                        .WithMany("ActividadesDeInvestigaciones")
                        .HasForeignKey("AsignacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asignaciones");
                });

            modelBuilder.Entity("Cientifica.Shared.Entities.Asignacion", b =>
                {
                    b.HasOne("Cientifica.Shared.Entities.ProyectoDeInvestigacion", "ProyectoDeInvestigacion")
                        .WithMany("Asignaciones")
                        .HasForeignKey("ProyectoDeInvestigacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cientifica.Shared.Entities.RecursosE", "RecursosE")
                        .WithMany("Asignaciones")
                        .HasForeignKey("RecursosEId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProyectoDeInvestigacion");

                    b.Navigation("RecursosE");
                });

            modelBuilder.Entity("Cientifica.Shared.Entities.Participacion", b =>
                {
                    b.HasOne("Cientifica.Shared.Entities.Investigador", "Investigadores")
                        .WithMany("Participaciones")
                        .HasForeignKey("InvestigadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cientifica.Shared.Entities.ProyectoDeInvestigacion", "ProyectoDeInvestigaciones")
                        .WithMany("Participaciones")
                        .HasForeignKey("ProyectoDeInvestigacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Investigadores");

                    b.Navigation("ProyectoDeInvestigaciones");
                });

            modelBuilder.Entity("Cientifica.Shared.Entities.Publicacion", b =>
                {
                    b.HasOne("Cientifica.Shared.Entities.ProyectoDeInvestigacion", "ProyectoDeInvestigaciones")
                        .WithMany("Publicaciones")
                        .HasForeignKey("ProyectoDeInvestigacionesId");

                    b.Navigation("ProyectoDeInvestigaciones");
                });

            modelBuilder.Entity("Cientifica.Shared.Entities.Asignacion", b =>
                {
                    b.Navigation("ActividadesDeInvestigaciones");
                });

            modelBuilder.Entity("Cientifica.Shared.Entities.Investigador", b =>
                {
                    b.Navigation("Participaciones");
                });

            modelBuilder.Entity("Cientifica.Shared.Entities.ProyectoDeInvestigacion", b =>
                {
                    b.Navigation("Asignaciones");

                    b.Navigation("Participaciones");

                    b.Navigation("Publicaciones");
                });

            modelBuilder.Entity("Cientifica.Shared.Entities.RecursosE", b =>
                {
                    b.Navigation("Asignaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
