

@page "/proyectodeinvestigacion/create"

@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService sweetAlertService



<h3>ProyectosDeInvestigacionCreater</h3>

<ProyectodeInvestigacionForm @ref = "proyectodeinvestigacionform" ProyectoDeInvestigacion="protectodeivestigacion" OnSubmit="Creater" ReturnAction="Return" />

@code {
    private ProyectodeInvstigacion protectodeivestigacion = new();
    private ProyectodeInvestigacionForm proyectodeInvestigacionform

    private async Task Creater()
    {
        var responsetHttp = await repository.Post("/api/proyectodeinvestigacion");

        if (responsetHttp.Error)

            var message = await responseHttp.GetErrorMessageAsync();
        await sweetAlertService.FireAsync("Error", message);
        return;


    }
    Return();

    var toast = sweetAlertService.Mixin(new SweetAlertOptions
        {

            Toast = true,
            Position = SweetAlertPosition.BottomEnd,
            ShowConfirmButton = true,
            Timer = 3000




        });


    await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro creado con éxito");
    
    }
    private void Return()
    {




        ownerForm!.FormularioPosteadoConExito = true;

        navigationManager.NavigateTo("/proyectodeinvestigacion");

    }
}

